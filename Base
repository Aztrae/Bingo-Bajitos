<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Selección de Imágenes y Cuadrícula</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            text-align: center;
            max-width: 800px;
            padding: 20px;
        }

        h1, h2 {
            color: #333;
        }

        .initial-selection {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            gap: 20px;
            margin: 20px 0;
        }

        .initial-selection img {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 10px;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .initial-selection img:hover {
            transform: scale(1.1);
        }

        .grid-container {
            margin-top: 20px;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(8, 1fr);
            gap: 10px;
            max-width: 800px;
            margin: 0 auto;
        }

        .grid .cell {
            position: relative;
            cursor: pointer;
        }

        .grid .cell img {
            width: 100%;
            height: 100px;
            object-fit: cover;
            border-radius: 5px;
            transition: transform 0.2s;
        }

        .grid .cell:hover img {
            transform: scale(1.05);
        }

        .grid .cell .id-overlay {
            position: absolute;
            bottom: 5px;
            right: 5px;
            background: rgba(0, 0, 0, 0.6);
            color: white;
            padding: 2px 6px;
            border-radius: 3px;
            font-size: 12px;
            pointer-events: none;
        }

        .grid .cell.grayscale img {
            filter: grayscale(100%);
        }

        #back-button {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        #back-button:hover {
            background-color: #0056b3;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background: white;
            padding: 20px;
            border-radius: 8px;
            max-width: 500px;
            text-align: center;
            position: relative;
            animation: fadeIn 0.3s ease-in;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.8); }
            to { opacity: 1; transform: scale(1); }
        }

        .close-button {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 24px;
            cursor: pointer;
            color: #333;
        }

        .close-button:hover {
            color: #ff0000;
        }

        #modal-image {
            width: 100%;
            max-height: 300px;
            object-fit: cover;
            border-radius: 5px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Selecciona una Imagen</h1>
        <div class="initial-selection" id="initial-selection"></div>
        <div class="grid-container" id="grid-container" style="display: none;">
            <h2>Cuadrícula de Imágenes</h2>
            <div class="grid" id="image-grid"></div>
            <button id="back-button">Volver a la Selección</button>
        </div>
        <div class="modal" id="modal">
            <div class="modal-content">
                <span class="close-button" id="close-modal">&times;</span>
                <h2 id="modal-title">Título</h2>
                <img id="modal-image" src="" alt="Imagen ampliada">
                <p id="modal-description">Descripción de la imagen</p>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const initialSelection = document.getElementById('initial-selection');
            const gridContainer = document.getElementById('grid-container');
            const imageGrid = document.getElementById('image-grid');
            const backButton = document.getElementById('back-button');
            const modal = document.getElementById('modal');
            const modalTitle = document.getElementById('modal-title');
            const modalImage = document.getElementById('modal-image');
            const modalDescription = document.getElementById('modal-description');
            const closeModal = document.getElementById('close-modal');

            const initialImages = [
                { src: 'https://picsum.photos/id/1001/300/200', id: 1 },
                { src: 'https://picsum.photos/id/1002/300/200', id: 2 },
                { src: 'https://picsum.photos/id/1003/300/200', id: 3 },
                { src: 'https://picsum.photos/id/1004/300/200', id: 4 },
                { src: 'https://picsum.photos/id/1005/300/200', id: 5 }
            ];

            const specialImages = [
                { id: 1, src: 'https://picsum.photos/id/1/200/100', title: 'Imagen Especial 1', description: 'Descripción de la imagen 1.' },
                { id: 10, src: 'https://picsum.photos/id/10/200/100', title: 'Imagen Especial 2', description: 'Descripción de la imagen 2.' },
                { id: 20, src: 'https://picsum.photos/id/20/200/100', title: 'Imagen Especial 3', description: 'Descripción de la imagen 3.' },
                { id: 30, src: 'https://picsum.photos/id/30/200/100', title: 'Imagen Especial 4', description: 'Descripción de la imagen 4.' },
                { id: 40, src: 'https://picsum.photos/id/40/200/100', title: 'Imagen Especial 5', description: 'Descripción de la imagen 5.' }
            ];

            const gridImages = Array.from({ length: 64 }, (_, i) => {
                const id = i + 1;
                const isSpecial = specialImages.find(special => special.id === id);
                return {
                    id: id,
                    src: isSpecial ? isSpecial.src : `https://picsum.photos/id/${101 + i}/200/100`
                };
            });

            initialImages.forEach(imgData => {
                const img = document.createElement('img');
                img.src = imgData.src;
                img.alt = `Selección ${imgData.id}`;
                img.dataset.id = imgData.id;
                img.addEventListener('click', () => {
                    initialSelection.style.display = 'none';
                    document.querySelector('h1').style.display = 'none';
                    gridContainer.style.display = 'block';
                    if (imageGrid.children.length === 0) {
                        generateGrid();
                    }
                });
                initialSelection.appendChild(img);
            });

            function createCell(i, src, isSpecial) {
                const cell = document.createElement('div');
                cell.classList.add('cell');
                cell.dataset.id = i;

                const img = document.createElement('img');
                img.src = src;
                img.alt = `Imagen ${i}`;
                img.loading = 'lazy';

                const overlay = document.createElement('span');
                overlay.classList.add('id-overlay');
                overlay.textContent = `ID: ${i}`;

                cell.appendChild(img);
                cell.appendChild(overlay);

                cell.addEventListener('click', () => {
                    const special = specialImages.find(special => special.id === parseInt(cell.dataset.id));
                    if (special) {
                        modalTitle.textContent = special.title;
                        modalImage.src = special.src;
                        modalDescription.textContent = special.description;
                        modal.style.display = 'flex';
                    }
                });

                return cell;
            }

            function generateGrid() {
                // Imagen 1
                if (true) {
                    const cell = createCell(1, gridImages[0].src, specialImages.find(s => s.id === 1));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                }
                // Imagen 2
                if (false) {
                    const cell = createCell(2, gridImages[1].src, specialImages.find(s => s.id === 2));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(2, gridImages[1].src, specialImages.find(s => s.id === 2));
                    imageGrid.appendChild(cell);
                }
                // Imagen 3
                if (false) {
                    const cell = createCell(3, gridImages[2].src, specialImages.find(s => s.id === 3));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(3, gridImages[2].src, specialImages.find(s => s.id === 3));
                    imageGrid.appendChild(cell);
                }
                // Imagen 4
                if (false) {
                    const cell = createCell(4, gridImages[3].src, specialImages.find(s => s.id === 4));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(4, gridImages[3].src, specialImages.find(s => s.id === 4));
                    imageGrid.appendChild(cell);
                }
                // Imagen 5
                if (false) {
                    const cell = createCell(5, gridImages[4].src, specialImages.find(s => s.id === 5));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(5, gridImages[4].src, specialImages.find(s => s.id === 5));
                    imageGrid.appendChild(cell);
                }
                // Imagen 6
                if (false) {
                    const cell = createCell(6, gridImages[5].src, specialImages.find(s => s.id === 6));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(6, gridImages[5].src, specialImages.find(s => s.id === 6));
                    imageGrid.appendChild(cell);
                }
                // Imagen 7
                if (false) {
                    const cell = createCell(7, gridImages[6].src, specialImages.find(s => s.id === 7));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(7, gridImages[6].src, specialImages.find(s => s.id === 7));
                    imageGrid.appendChild(cell);
                }
                // Imagen 8
                if (false) {
                    const cell = createCell(8, gridImages[7].src, specialImages.find(s => s.id === 8));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(8, gridImages[7].src, specialImages.find(s => s.id === 8));
                    imageGrid.appendChild(cell);
                }
                // Imagen 9
                if (false) {
                    const cell = createCell(9, gridImages[8].src, specialImages.find(s => s.id === 9));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(9, gridImages[8].src, specialImages.find(s => s.id === 9));
                    imageGrid.appendChild(cell);
                }
                // Imagen 10
                if (false) {
                    const cell = createCell(10, gridImages[9].src, specialImages.find(s => s.id === 10));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(10, gridImages[9].src, specialImages.find(s => s.id === 10));
                    imageGrid.appendChild(cell);
                }
                // Imagen 11
                if (false) {
                    const cell = createCell(11, gridImages[10].src, specialImages.find(s => s.id === 11));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(11, gridImages[10].src, specialImages.find(s => s.id === 11));
                    imageGrid.appendChild(cell);
                }
                // Imagen 12
                if (false) {
                    const cell = createCell(12, gridImages[11].src, specialImages.find(s => s.id === 12));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(12, gridImages[11].src, specialImages.find(s => s.id === 12));
                    imageGrid.appendChild(cell);
                }
                // Imagen 13
                if (false) {
                    const cell = createCell(13, gridImages[12].src, specialImages.find(s => s.id === 13));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(13, gridImages[12].src, specialImages.find(s => s.id === 13));
                    imageGrid.appendChild(cell);
                }
                // Imagen 14
                if (false) {
                    const cell = createCell(14, gridImages[13].src, specialImages.find(s => s.id === 14));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(14, gridImages[13].src, specialImages.find(s => s.id === 14));
                    imageGrid.appendChild(cell);
                }
                // Imagen 15
                if (false) {
                    const cell = createCell(15, gridImages[14].src, specialImages.find(s => s.id === 15));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(15, gridImages[14].src, specialImages.find(s => s.id === 15));
                    imageGrid.appendChild(cell);
                }
                // Imagen 16
                if (false) {
                    const cell = createCell(16, gridImages[15].src, specialImages.find(s => s.id === 16));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(16, gridImages[15].src, specialImages.find(s => s.id === 16));
                    imageGrid.appendChild(cell);
                }
                // Imagen 17
                if (false) {
                    const cell = createCell(17, gridImages[16].src, specialImages.find(s => s.id === 17));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(17, gridImages[16].src, specialImages.find(s => s.id === 17));
                    imageGrid.appendChild(cell);
                }
                // Imagen 18
                if (false) {
                    const cell = createCell(18, gridImages[17].src, specialImages.find(s => s.id === 18));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(18, gridImages[17].src, specialImages.find(s => s.id === 18));
                    imageGrid.appendChild(cell);
                }
                // Imagen 19
                if (false) {
                    const cell = createCell(19, gridImages[18].src, specialImages.find(s => s.id === 19));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(19, gridImages[18].src, specialImages.find(s => s.id === 19));
                    imageGrid.appendChild(cell);
                }
                // Imagen 20
                if (false) {
                    const cell = createCell(20, gridImages[19].src, specialImages.find(s => s.id === 20));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(20, gridImages[19].src, specialImages.find(s => s.id === 20));
                    imageGrid.appendChild(cell);
                }
                // Imagen 21
                if (false) {
                    const cell = createCell(21, gridImages[20].src, specialImages.find(s => s.id === 21));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(21, gridImages[20].src, specialImages.find(s => s.id === 21));
                    imageGrid.appendChild(cell);
                }
                // Imagen 22
                if (false) {
                    const cell = createCell(22, gridImages[21].src, specialImages.find(s => s.id === 22));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(22, gridImages[21].src, specialImages.find(s => s.id === 22));
                    imageGrid.appendChild(cell);
                }
                // Imagen 23
                if (false) {
                    const cell = createCell(23, gridImages[22].src, specialImages.find(s => s.id === 23));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(23, gridImages[22].src, specialImages.find(s => s.id === 23));
                    imageGrid.appendChild(cell);
                }
                // Imagen 24
                if (false) {
                    const cell = createCell(24, gridImages[23].src, specialImages.find(s => s.id === 24));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(24, gridImages[23].src, specialImages.find(s => s.id === 24));
                    imageGrid.appendChild(cell);
                }
                // Imagen 25
                if (false) {
                    const cell = createCell(25, gridImages[24].src, specialImages.find(s => s.id === 25));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(25, gridImages[24].src, specialImages.find(s => s.id === 25));
                    imageGrid.appendChild(cell);
                }
                // Imagen 26
                if (false) {
                    const cell = createCell(26, gridImages[25].src, specialImages.find(s => s.id === 26));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(26, gridImages[25].src, specialImages.find(s => s.id === 26));
                    imageGrid.appendChild(cell);
                }
                // Imagen 27
                if (false) {
                    const cell = createCell(27, gridImages[26].src, specialImages.find(s => s.id === 27));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(27, gridImages[26].src, specialImages.find(s => s.id === 27));
                    imageGrid.appendChild(cell);
                }
                // Imagen 28
                if (false) {
                    const cell = createCell(28, gridImages[27].src, specialImages.find(s => s.id === 28));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(28, gridImages[27].src, specialImages.find(s => s.id === 28));
                    imageGrid.appendChild(cell);
                }
                // Imagen 29
                if (false) {
                    const cell = createCell(29, gridImages[28].src, specialImages.find(s => s.id === 29));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(29, gridImages[28].src, specialImages.find(s => s.id === 29));
                    imageGrid.appendChild(cell);
                }
                // Imagen 30
                if (false) {
                    const cell = createCell(30, gridImages[29].src, specialImages.find(s => s.id === 30));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(30, gridImages[29].src, specialImages.find(s => s.id === 30));
                    imageGrid.appendChild(cell);
                }
                // Imagen 31
                if (false) {
                    const cell = createCell(31, gridImages[30].src, specialImages.find(s => s.id === 31));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(31, gridImages[30].src, specialImages.find(s => s.id === 31));
                    imageGrid.appendChild(cell);
                }
                // Imagen 32
                if (false) {
                    const cell = createCell(32, gridImages[31].src, specialImages.find(s => s.id === 32));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(32, gridImages[31].src, specialImages.find(s => s.id === 32));
                    imageGrid.appendChild(cell);
                }
                // Imagen 33
                if (false) {
                    const cell = createCell(33, gridImages[32].src, specialImages.find(s => s.id === 33));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(33, gridImages[32].src, specialImages.find(s => s.id === 33));
                    imageGrid.appendChild(cell);
                }
                // Imagen 34
                if (false) {
                    const cell = createCell(34, gridImages[33].src, specialImages.find(s => s.id === 34));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(34, gridImages[33].src, specialImages.find(s => s.id === 34));
                    imageGrid.appendChild(cell);
                }
                // Imagen 35
                if (false) {
                    const cell = createCell(35, gridImages[34].src, specialImages.find(s => s.id === 35));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(35, gridImages[34].src, specialImages.find(s => s.id === 35));
                    imageGrid.appendChild(cell);
                }
                // Imagen 36
                if (false) {
                    const cell = createCell(36, gridImages[35].src, specialImages.find(s => s.id === 36));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(36, gridImages[35].src, specialImages.find(s => s.id === 36));
                    imageGrid.appendChild(cell);
                }
                // Imagen 37
                if (false) {
                    const cell = createCell(37, gridImages[36].src, specialImages.find(s => s.id === 37));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(37, gridImages[36].src, specialImages.find(s => s.id === 37));
                    imageGrid.appendChild(cell);
                }
                // Imagen 38
                if (false) {
                    const cell = createCell(38, gridImages[37].src, specialImages.find(s => s.id === 38));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(38, gridImages[37].src, specialImages.find(s => s.id === 38));
                    imageGrid.appendChild(cell);
                }
                // Imagen 39
                if (false) {
                    const cell = createCell(39, gridImages[38].src, specialImages.find(s => s.id === 39));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(39, gridImages[38].src, specialImages.find(s => s.id === 39));
                    imageGrid.appendChild(cell);
                }
                // Imagen 40
                if (false) {
                    const cell = createCell(40, gridImages[39].src, specialImages.find(s => s.id === 40));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(40, gridImages[39].src, specialImages.find(s => s.id === 40));
                    imageGrid.appendChild(cell);
                }
                // Imagen 41
                if (false) {
                    const cell = createCell(41, gridImages[40].src, specialImages.find(s => s.id === 41));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(41, gridImages[40].src, specialImages.find(s => s.id === 41));
                    imageGrid.appendChild(cell);
                }
                // Imagen 42
                if (false) {
                    const cell = createCell(42, gridImages[41].src, specialImages.find(s => s.id === 42));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(42, gridImages[41].src, specialImages.find(s => s.id === 42));
                    imageGrid.appendChild(cell);
                }
                // Imagen 43
                if (false) {
                    const cell = createCell(43, gridImages[42].src, specialImages.find(s => s.id === 43));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(43, gridImages[42].src, specialImages.find(s => s.id === 43));
                    imageGrid.appendChild(cell);
                }
                // Imagen 44
                if (false) {
                    const cell = createCell(44, gridImages[43].src, specialImages.find(s => s.id === 44));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(44, gridImages[43].src, specialImages.find(s => s.id === 44));
                    imageGrid.appendChild(cell);
                }
                // Imagen 45
                if (false) {
                    const cell = createCell(45, gridImages[44].src, specialImages.find(s => s.id === 45));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(45, gridImages[44].src, specialImages.find(s => s.id === 45));
                    imageGrid.appendChild(cell);
                }
                // Imagen 46
                if (false) {
                    const cell = createCell(46, gridImages[45].src, specialImages.find(s => s.id === 46));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(46, gridImages[45].src, specialImages.find(s => s.id === 46));
                    imageGrid.appendChild(cell);
                }
                // Imagen 47
                if (false) {
                    const cell = createCell(47, gridImages[46].src, specialImages.find(s => s.id === 47));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(47, gridImages[46].src, specialImages.find(s => s.id === 47));
                    imageGrid.appendChild(cell);
                }
                // Imagen 48
                if (false) {
                    const cell = createCell(48, gridImages[47].src, specialImages.find(s => s.id === 48));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(48, gridImages[47].src, specialImages.find(s => s.id === 48));
                    imageGrid.appendChild(cell);
                }
                // Imagen 49
                if (false) {
                    const cell = createCell(49, gridImages[48].src, specialImages.find(s => s.id === 49));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(49, gridImages[48].src, specialImages.find(s => s.id === 49));
                    imageGrid.appendChild(cell);
                }
                // Imagen 50
                if (false) {
                    const cell = createCell(50, gridImages[49].src, specialImages.find(s => s.id === 50));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(50, gridImages[49].src, specialImages.find(s => s.id === 50));
                    imageGrid.appendChild(cell);
                }
                // Imagen 51
                if (false) {
                    const cell = createCell(51, gridImages[50].src, specialImages.find(s => s.id === 51));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(51, gridImages[50].src, specialImages.find(s => s.id === 51));
                    imageGrid.appendChild(cell);
                }
                // Imagen 52
                if (false) {
                    const cell = createCell(52, gridImages[51].src, specialImages.find(s => s.id === 52));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(52, gridImages[51].src, specialImages.find(s => s.id === 52));
                    imageGrid.appendChild(cell);
                }
                // Imagen 53
                if (false) {
                    const cell = createCell(53, gridImages[52].src, specialImages.find(s => s.id === 53));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(53, gridImages[52].src, specialImages.find(s => s.id === 53));
                    imageGrid.appendChild(cell);
                }
                // Imagen 54
                if (false) {
                    const cell = createCell(54, gridImages[53].src, specialImages.find(s => s.id === 54));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(54, gridImages[53].src, specialImages.find(s => s.id === 54));
                    imageGrid.appendChild(cell);
                }
                // Imagen 55
                if (false) {
                    const cell = createCell(55, gridImages[54].src, specialImages.find(s => s.id === 55));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(55, gridImages[54].src, specialImages.find(s => s.id === 55));
                    imageGrid.appendChild(cell);
                }
                // Imagen 56
                if (false) {
                    const cell = createCell(56, gridImages[55].src, specialImages.find(s => s.id === 56));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(56, gridImages[55].src, specialImages.find(s => s.id === 56));
                    imageGrid.appendChild(cell);
                }
                // Imagen 57
                if (false) {
                    const cell = createCell(57, gridImages[56].src, specialImages.find(s => s.id === 57));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(57, gridImages[56].src, specialImages.find(s => s.id === 57));
                    imageGrid.appendChild(cell);
                }
                // Imagen 58
                if (false) {
                    const cell = createCell(58, gridImages[57].src, specialImages.find(s => s.id === 58));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(58, gridImages[57].src, specialImages.find(s => s.id === 58));
                    imageGrid.appendChild(cell);
                }
                // Imagen 59
                if (false) {
                    const cell = createCell(59, gridImages[58].src, specialImages.find(s => s.id === 59));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(59, gridImages[58].src, specialImages.find(s => s.id === 59));
                    imageGrid.appendChild(cell);
                }
                // Imagen 60
                if (false) {
                    const cell = createCell(60, gridImages[59].src, specialImages.find(s => s.id === 60));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(60, gridImages[59].src, specialImages.find(s => s.id === 60));
                    imageGrid.appendChild(cell);
                }
                // Imagen 61
                if (false) {
                    const cell = createCell(61, gridImages[60].src, specialImages.find(s => s.id === 61));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(61, gridImages[60].src, specialImages.find(s => s.id === 61));
                    imageGrid.appendChild(cell);
                }
                // Imagen 62
                if (false) {
                    const cell = createCell(62, gridImages[61].src, specialImages.find(s => s.id === 62));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(62, gridImages[61].src, specialImages.find(s => s.id === 62));
                    imageGrid.appendChild(cell);
                }
                // Imagen 63
                if (false) {
                    const cell = createCell(63, gridImages[62].src, specialImages.find(s => s.id === 63));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(63, gridImages[62].src, specialImages.find(s => s.id === 63));
                    imageGrid.appendChild(cell);
                }
                // Imagen 64
                if (false) {
                    const cell = createCell(64, gridImages[63].src, specialImages.find(s => s.id === 64));
                    cell.classList.add('grayscale');
                    imageGrid.appendChild(cell);
                } else {
                    const cell = createCell(64, gridImages[63].src, specialImages.find(s => s.id === 64));
                    imageGrid.appendChild(cell);
                }
            }

            backButton.addEventListener('click', () => {
                gridContainer.style.display = 'none';
                initialSelection.style.display = 'flex';
                document.querySelector('h1').style.display = 'block';
            });

            closeModal.addEventListener('click', () => {
                modal.style.display = 'none';
            });

            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    modal.style.display = 'none';
                }
            });
        });
    </script>
</body>
</html>
